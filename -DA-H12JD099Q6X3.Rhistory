plot(wl_queue_size(waiting_list_two_years))
install.packages("randomNames")
library(randomNames)
df <- load(file="/data/OPCS.Rda")
cd
getwd()
df <- load(file="./data/OPCS.Rda")
df <- load(file="./data/OPCS4.Rda")
df <- load(file="./data/OPCS4.Rda")
head(df)
head(df,4)
head(df,100)
load("~/Library/CloudStorage/OneDrive-DurhamUniversity/ACTIVE/NHS_Waiting_List_Metrics/NHSRwaitinglist/data/OPCS4.Rda")
OPCS4 <- read.csv("./data/OPCS4.csv")
OPCS4
load("~/Library/CloudStorage/OneDrive-DurhamUniversity/ACTIVE/NHS_Waiting_List_Metrics/NHSRwaitinglist/data/OPCS4.Rda")
load("~/Library/CloudStorage/OneDrive-DurhamUniversity/ACTIVE/NHS_Waiting_List_Metrics/NHSRwaitinglist/data/OPCS4.Rda")
View(OPCS)
save("./data/OPCS.Rda")
save(OPCS,file="./data/OPCS.Rda")
load("~/Library/CloudStorage/OneDrive-DurhamUniversity/ACTIVE/NHS_Waiting_List_Metrics/NHSRwaitinglist/data/OPCS.Rda")
rm(list = ls())
df
OPCS4 <- load(file="./data/OPCS4.Rda")
OPCS4 <- load(file="./data/OPCS4.Rda")
save(OPCS,file="./data/OPCS4.Rda")
OPCS4 <- read.csv("./data/OPCS4.csv")
save(OPCS4,file="./data/OPCS4.Rda")
View(OPCS4)
View(OPCS4)
sample <- OPCS4[sample(nrow(OPCS4)),10]
OPCS4 <- load(file="./data/OPCS4.Rda")
getwd()
OPCS4 <- load(file="./data/OPCS4.csv")
OPCS4 <- read.csv("./data/OPCS4.csv")
save(OPCS4,file="./data/OPCS4.Rda")
OPCS <- load(file="./data/OPCS4.Rda")
OPCS <- load(file="/data/OPCS4.Rda")
load("~/Library/CloudStorage/OneDrive-DurhamUniversity/ACTIVE/NHS_Waiting_List_Metrics/NHSRwaitinglist/data/OPCS.Rda")
OP <- load(file="/data/OPCS.Rda")
OP <- load(file="./data/OPCS.Rda")
file.exists("canteen_clean.rda")
file.exists("OPCS4.rda")
filename <- file.choose("OPCS4.rda")
OPS <- readRDS(filename)
OPS <- readRDS("OPCS4.rda")
getwd()
load(file = "OPCS.Rda")
load(file = "OPCS4.Rda")
a <- load(file = "OPCS4.Rda")
a <- load(file = "OPCS.Rda")
a <- load(file = "data/OPCS.Rda")
a
a <- load(file = "./data/OPCS.Rda")
a
a <- load(file = "./data/OPCS.rda")
a
OPCS4 <- read.csv("./data/OPCS4.csv")
save(OPCS4)
save(OPCS4,file ="/data/")
save(OPCS4,file ="./data/")
save(OPCS4,file ="Â¬/data/")
save(OPCS4,file =".")
save(OPCS4,file =getwd())
getwd()
save(OPCS4,file =getwd()+"/data/OPCS4.rda")
getwd()+"/data/OPCS4.rda"
paste(etwd(),"/data/OPCS4.rda")
paste(getwd(),"/data/OPCS4.rda")
paste(getwd(),"/data/OPCS4.rda",sep="")
save(OPCS4,file =paste(getwd(),"/data/OPCS4.rda",sep=""))
op <- load(file =paste(getwd(),"/data/OPCS4.rda",sep=""))
OPCS4
data = c(1,3,4)
data
save(data,file="data.Rda")
rm(list = ls())
load("data.Rda")
load("~/Library/CloudStorage/OneDrive-DurhamUniversity/ACTIVE/NHS_Waiting_List_Metrics/NHSRwaitinglist/data.Rda")
save(data,file="data/data.Rda")
load("data/data.Rda")
a<-load("data/data.Rda")
a
load("data/OPCS4")
load("data/OPCS4.rda")
load(file="./data/OPCS4.Rda")
sample <- OPCS4[sample(nrow(OPCS4)),10]
sample
OPCS4[sample(nrow(OPCS4)),10]
head(OPCS4,4)
nrow(OPCS4)
sample <- OPCS4[sample(nrow(OPCS4),10)]
sample(nrow(OPCS4),10)
OPCS4[sample(nrow(OPCS4),10)]
OPCS[1,3]
OPCSs[1,3]
OPCS4[1,3]
OPCS4[1,]
OPCS4[,sample(nrow(OPCS4),10)]
OPCS4[sample(nrow(OPCS4),10),]
sample
OPCS4[sample(nrow(OPCS4),10),]
ran <- OPCS4[sample(nrow(OPCS4),10),]
ran
OPS <- OPCS4[,where(OPCS4.selectable="Y")]
OPS <- OPCS4[,where(OPCS4.selectable="Y")]
OPS <- OPCS4[OPCS4.selectable="Y",]
OPS <- OPCS4[OPCS4$selectable="Y",]
OPS <- OPCS4[OPCS4$selectable=="Y",]
ran <- OPCS4[sample(nrow(OPS),10),]
ran
ran[c("code_4digit","name_4digit")]
operation <- ran[c("code_4digit","name_4digit")]
# get operations
n_rows <- 10
OPS <- OPCS4[OPCS4$selectable=="Y",]
ran <- OPCS4[sample(nrow(OPS),n_rows,replace=TRUE),]
operation <- ran[c("code_4digit","name_4digit")]
randomNames(n_rows)
# get operations
n_rows <- 10
OPS <- OPCS4[OPCS4$selectable=="Y",]
ran <- OPCS4[sample(nrow(OPS),n_rows,replace=TRUE),]
# get operations
n_rows <- 10
OPS <- OPCS4[OPCS4$selectable=="Y",]
ran <- OPCS4[sample(nrow(OPS),n_rows,replace=TRUE),]
proceedures <- ran[c("code_4digit","name_4digit")]
names <- randomNames(n_rows)
read.csv("./data/OPCS4.csv")
read.csv("./data/age-profile-by-ethnicity-table.csv")
age_date <- read.csv("./data/age-profile-by-ethnicity-table.csv")
age_date[,1]
age_date[,2]
sample(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85))
sample(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85),prob("5.4" "5.9" "6.0" "3.4" "8.3" "6.5" "7.0" "6.7" "6.3" "6.4" "6.9" "6.8" "5.8" "4.9" "5.0" "3.6" "2.5" "2.4"))
sample(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85),prob(5.4,5.9,6.0,3.4,8.3,6.5,7.0,6.7,6.3,6.4,6.9,6.8,5.8,4.9,5.0,3.6,2.5,2.4))
sample(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85),prob=c(5.4,5.9,6.0,3.4,8.3,6.5,7.0,6.7,6.3,6.4,6.9,6.8,5.8,4.9,5.0,3.6,2.5,2.4))
sample(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85),prob=c(5.4,5.9,6.0,3.4,8.3,6.5,7.0,6.7,6.3,6.4,6.9,6.8,5.8,4.9,5.0,3.6,2.5,2.4))
sample(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85),prob=c(5.4,5.9,6.0,3.4,8.3,6.5,7.0,6.7,6.3,6.4,6.9,6.8,5.8,4.9,5.0,3.6,2.5,2.4))
sample(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85),prob=c(5.4,5.9,6.0,3.4,8.3,6.5,7.0,6.7,6.3,6.4,6.9,6.8,5.8,4.9,5.0,3.6,2.5,2.4))
sample(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85),prob=c(5.4,5.9,6.0,3.4,8.3,6.5,7.0,6.7,6.3,6.4,6.9,6.8,5.8,4.9,5.0,3.6,2.5,2.4))
sample(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85),prob=c(5.4,5.9,6.0,3.4,8.3,6.5,7.0,6.7,6.3,6.4,6.9,6.8,5.8,4.9,5.0,3.6,2.5,2.4))
sample(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85),prob=c(5.4,5.9,6.0,3.4,8.3,6.5,7.0,6.7,6.3,6.4,6.9,6.8,5.8,4.9,5.0,3.6,2.5,2.4))
sample.int(100, 10)
sample(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85),size=1,prob=c(5.4,5.9,6.0,3.4,8.3,6.5,7.0,6.7,6.3,6.4,6.9,6.8,5.8,4.9,5.0,3.6,2.5,2.4))
sample(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85),size=1,prob=c(5.4,5.9,6.0,3.4,8.3,6.5,7.0,6.7,6.3,6.4,6.9,6.8,5.8,4.9,5.0,3.6,2.5,2.4))
sample(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85),size=1,prob=c(5.4,5.9,6.0,3.4,8.3,6.5,7.0,6.7,6.3,6.4,6.9,6.8,5.8,4.9,5.0,3.6,2.5,2.4))
sample(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85),size=1,prob=c(5.4,5.9,6.0,3.4,8.3,6.5,7.0,6.7,6.3,6.4,6.9,6.8,5.8,4.9,5.0,3.6,2.5,2.4))
sample(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85),size=1,prob=c(5.4,5.9,6.0,3.4,8.3,6.5,7.0,6.7,6.3,6.4,6.9,6.8,5.8,4.9,5.0,3.6,2.5,2.4))
sample(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85),size=1,prob=c(5.4,5.9,6.0,3.4,8.3,6.5,7.0,6.7,6.3,6.4,6.9,6.8,5.8,4.9,5.0,3.6,2.5,2.4))
sample(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85),size=1,replace=TRUEprob=c(5.4,5.9,6.0,3.4,8.3,6.5,7.0,6.7,6.3,6.4,6.9,6.8,5.8,4.9,5.0,3.6,2.5,2.4))
sample(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85),size=1,replace=TRUE,prob=c(5.4,5.9,6.0,3.4,8.3,6.5,7.0,6.7,6.3,6.4,6.9,6.8,5.8,4.9,5.0,3.6,2.5,2.4))
ages_rounded <-c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85)
probs <- c(5.4,5.9,6.0,3.4,8.3,6.5,7.0,6.7,6.3,6.4,6.9,6.8,5.8,4.9,5.0,3.6,2.5,2.4)
sample(ages_rounded,size=1,replace=TRUE,prob=probs)
sample(ages_rounded,size=100,replace=TRUE,prob=probs)
sample.int(4,1)
sample.int(4,100)
sample(ages_rounded,size=100,replace=TRUE,prob=probs)
sample.int(4,100)
sample.int(4,100, replace = FALSE)
sample.int(4,100, replace = TRUE)
sample.int(5,100, replace = TRUE)-1
+ sample.int(4,n_rows, replace = FALSE) -1
years <- sample(ages_rounded,size=n_rows,replace=TRUE,prob=probs)
+ sample.int(4,n_rows, replace = FALSE) -1
names <- randomNames(n_rows)
ages_rounded <-c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85)
probs <- c(5.4,5.9,6.0,3.4,8.3,6.5,7.0,6.7,
6.3,6.4,6.9,6.8,5.8,4.9,5.0,3.6,2.5,2.4)
years <- sample(ages_rounded,size=n_rows,replace=TRUE,prob=probs)
+ sample.int(4,n_rows, replace = TRUE) -1
sample(ages_rounded,size=n_rows,replace=TRUE,prob=probs)
+ sample.int(4,n_rows, replace = TRUE) -1
sample(ages_rounded,size=n_rows,replace=TRUE,prob=probs) + sample.int(4,n_rows, replace = TRUE) -1
years <- sample(ages_rounded,size=n_rows,replace=TRUE,prob=probs) \
years <- sample(ages_rounded,size=n_rows,replace=TRUE,prob=probs) +
sample.int(4,n_rows, replace = TRUE) -1
years
as.Date(years)
years <- 365*(sample(ages_rounded,size=n_rows,replace=TRUE,prob=probs) +
sample.int(4,n_rows, replace = TRUE) -1)
Sys.Date()
start_date = NULL
if ( start_date == NULL){
start_date = Sys.Date()
}
days <- sample.int(365,n_rows, replace = TRUE) -1
years
years+days
as.Date(years+days)
as.Date(start_date-years+days)
as.Date(as.numeric(start_date)-years+days)
as.numeric(start_date)
start_Date
start_date
start_date = NULL
if ( start_date == NULL){
start_date = Sys.Date()
}
start_date = NULL
if ( is.null(start_date) ){
start_date = Sys.Date()
}
start_date
as.Date(as.numeric(start_date)-years+days)
dobs <= as.Date(as.numeric(start_date)-years-days)
dobs <- as.Date(as.numeric(start_date)-years-days)
dobs
proceedures
View(proceedures)
View(proceedures)
View(OPCS4)
n_rows <- 10
OPS <- OPCS4[OPCS4$selectable=="Y",]
ran <- OPS[sample(nrow(OPS),n_rows,replace=TRUE),]
proceedures <- ran[c("code_4digit","name_4digit")]
proceedures
View(OPS)
View(OPS[is.NA(OPS$code_4digit)]
a
View(OPS[is.NA(OPS$code_4digit),])
View(OPS[is.na(OPS$code_4digit),])
OPS <- OPCS4[OPCS4$selectable=="Y"]
OPS <- OPCS4[OPCS4$selectable=="Y"]
OPS <- OPCS4[,OPCS4$selectable=="Y"]
OPS <- OPCS4[OPCS4$selectable=="Y",]
ran <- OPS[sample(nrow(OPS),n_rows,replace=TRUE),]
View(OPS[is.na(OPS$code_4digit),])
n_rows <- 10
OPS <- OPCS4[OPCS4$selectable=="Y",]
ran <- OPS[sample(nrow(OPS),n_rows,replace=TRUE),]
proceedures <- ran[c("code_4digit","name_4digit")]
View(proceedures)
View(proceedures)
n_rows <- 10
OPS <- OPCS4[OPCS4$selectable=="Y" && !is.na(OPCS4$name_4digit),]
OPS <- OPCS4[(OPCS4$selectable=="Y") && (!is.na(OPCS4$name_4digit)),]
OPS <- OPCS4[(OPCS4$selectable=="Y") & (!is.na(OPCS4$name_4digit)),]
n_rows <- 10
OPS <- OPCS4[(OPCS4$selectable=="Y") & (!is.na(OPCS4$name_4digit)),]
ran <- OPS[sample(nrow(OPS),n_rows,replace=TRUE),]
proceedures <- ran[c("code_4digit","name_4digit")]
waiting_list = data.frame()
waiting_list$Names <- names
waiting_list = data.frame()
waiting_list$Names <- names
waiting_list = data.frame()
waiting_list <- data.frame()
waiting_list$Names <- names
waiting_list <- data.frame(
Names = names
)
waiting_list
waiting_list <- data.frame(
Names = names,
Birth.Dates = dobs,
OPCS = proceedures$code_4digit,
proceedure = proceedures$name_4digit
)
waiting_list
waiting_list <- data.frame(
Names = names,
Birth_Date = dobs,
OPCS = proceedures$code_4digit,
Proceedure = proceedures$name_4digit
)
10e4
10e2
10e+2
10e+0
1e+0
1e+1
1e+11
1e+4
NHS_number <- sample.int(1e+11,n_rows, replace=TRUE)
waiting_list <- data.frame(
Names = names,
Birth_Date = dobs,
NHS_number = NHS_number,
OPCS = proceedures$code_4digit,
Proceedure = proceedures$name_4digit
)
View(waiting_list)
NHS_number <- sample.int(1e+8,n_rows, replace=TRUE)
years <- 365*(sample(ages_rounded,size=n_rows,replace=TRUE,prob=probs) +
sample.int(4,n_rows, replace = TRUE) -1)
days <- sample.int(365,n_rows, replace = TRUE) -1
dobs <- as.Date(as.numeric(start_date)-years-days)
waiting_list <- data.frame(
Names = names,
Birth_Date = dobs,
NHS_number = NHS_number,
OPCS = proceedures$code_4digit,
Proceedure = proceedures$name_4digit
)
NHS_number <-
sdf
View(waiting_list)
replicate(5, sample(LETTERS, n, TRUE), FALSE)
replicate(5, sample(LETTERS, 10, TRUE), FALSE)
paste(sample(LETTERS, 10, TRUE), sep="")
waiting_list <- data.frame(
Name = names,
Birth_Date = dobs,
NHS_number = NHS_number,
OPCS = proceedures$code_4digit,
Proceedure = proceedures$name_4digit,
Consultant = consultant
)
consultant <- randomNames(n_rows)
waiting_list <- data.frame(
Name = names,
Birth_Date = dobs,
NHS_number = NHS_number,
OPCS = proceedures$code_4digit,
Proceedure = proceedures$name_4digit,
Consultant = consultant
)
waiting_list
View(waiting_list)
wl_simulator("2024-01-01", "2024-03-31", 100, 90)
wl_simulator("2024-01-01", "2024-03-31", 1, 9)
waiting_list[,c("referral")] <- NA
waiting_list
referral <- c(rep(NA,n_rows))
removal <- c(rep(NA,n_rows))
withdrawal <- c(rep(NA,n_rows))
referral <- c(rep(NA,n_rows))
removal <- c(rep(NA,n_rows))
withdrawal <- c(rep(NA,n_rows))
waiting_list <- data.frame(
Referral = referral,
Removal = removal,
Withdrawal = withdrawal,
Name = names,
Birth_Date = dobs,
NHS_number = NHS_number,
OPCS = proceedures$code_4digit,
Proceedure = proceedures$name_4digit,
Consultant = consultant
)
View(waiting_list)
start_date <- as.Date(start_date)
end_date <- as.Date(end_date)
wl_simulator <- function(
start_date = NULL,
end_date = NULL,
demand,
capacity,
waiting_list = NULL,
referral_index = 1,
withdrawal_prob = NA) {
start_date <- as.Date(start_date)
end_date <- as.Date(end_date)
number_of_days <- as.numeric(end_date) - as.numeric(start_date)
total_demand <- demand * number_of_days / 7
daily_capacity <- capacity / 7
# allowing for fluctuations in predicted demand give a arrival list
realized_demand <- rpois(1, total_demand)
referral <-
sample(
seq(as.Date(start_date), as.Date(end_date), by = "day"),
realized_demand, replace = TRUE)
referral <- referral[order(referral)]
removal <- rep(as.Date(NA), length(referral))
if (is.na(withdrawal_prob)){
wl_simulated <- data.frame("referral" = referral,
"removal" = removal)
} else {
withdrawal <- referrals + rgeom(length(referrals),prob = withdrawal_prob)
wl_simulated <- data.frame("referral" = referral,
"removal" = removal,
"withdrawal" = withdrawal)
}
# YOU ARE HERE!!!
if (!is.null(waiting_list)) {
wl_simulated <- wl_join(waiting_list, wl_simulated, referral_index)
}
# create an operating schedule
schedule <-
as.Date(
as.numeric(start_date) +
ceiling(seq(0, number_of_days - 1, 1 / daily_capacity)),
origin = "1970-01-01")
wl_simulated <- wl_schedule(wl_simulated, schedule)
return(wl_simulated)
}
wl_simulator <- function(
start_date = NULL,
end_date = NULL,
demand,
capacity,
waiting_list = NULL,
referral_index = 1,
withdrawal_prob = NA) {
start_date <- as.Date(start_date)
end_date <- as.Date(end_date)
number_of_days <- as.numeric(end_date) - as.numeric(start_date)
total_demand <- demand * number_of_days / 7
daily_capacity <- capacity / 7
# allowing for fluctuations in predicted demand give a arrival list
realized_demand <- rpois(1, total_demand)
referral <-
sample(
seq(as.Date(start_date), as.Date(end_date), by = "day"),
realized_demand, replace = TRUE)
referral <- referral[order(referral)]
removal <- rep(as.Date(NA), length(referral))
if (is.na(withdrawal_prob)){
wl_simulated <- data.frame("referral" = referral,
"removal" = removal)
} else {
withdrawal <- referrals + rgeom(length(referrals),prob = withdrawal_prob)
wl_simulated <- data.frame("referral" = referral,
"removal" = removal,
"withdrawal" = withdrawal)
}
# YOU ARE HERE!!!
if (!is.null(waiting_list)) {
wl_simulated <- wl_join(waiting_list, wl_simulated, referral_index)
}
# create an operating schedule
schedule <-
as.Date(
as.numeric(start_date) +
ceiling(seq(0, number_of_days - 1, 1 / daily_capacity)),
origin = "1970-01-01")
wl_simulated <- wl_schedule(wl_simulated, schedule)
return(wl_simulated)
}
start_date = Sys.Date()
start_date
start_date+100
if (is.na(start_date)){
start_date = Sys.Date()
}
if(is.na(end_date)){
end_date = start_date+100
}
start_date = NULL,
start_date = NULL
end_date = NULL
start_date <- as.Date(start_date)
end_date <- as.Date(end_date)
number_of_days <- as.numeric(end_date) - as.numeric(start_date)
total_demand <- demand * number_of_days / 7
demand =30
if (is.na(start_date)){
start_date = Sys.Date()
}
start_date
start_date = Sys.Date()
start_date
if (is.na(start_date)){
start_date = Sys.Date()
}
if(is.na(end_date)){
end_date = start_date+100
}
is.na(start_date)
start_date <- as.Date(start_date)
start_date
end_date <- as.Date(end_date)
number_of_days <- as.numeric(end_date) - as.numeric(start_date)
total_demand <- demand * number_of_days / 7
daily_capacity <- capacity / 7
capacity <- 31
start_date <- as.Date(start_date)
end_date <- as.Date(end_date)
number_of_days <- as.numeric(end_date) - as.numeric(start_date)
total_demand <- demand * number_of_days / 7
daily_capacity <- capacity / 7
# allowing for fluctuations in predicted demand give a arrival list
realized_demand <- rpois(1, total_demand)
referral <-
sample(
seq(as.Date(start_date), as.Date(end_date), by = "day"),
realized_demand, replace = TRUE)
end_date
if (is.na(start_date)){
start_date = Sys.Date()
}
if(is.na(end_date)){
end_date = start_date+100
}
start_date = NULL
end_date = NULL
if (is.na(start_date)){
start_date = Sys.Date()
}
if (is.null(start_date)){
start_date = Sys.Date()
}
if(is.null(end_date)){
end_date = start_date+100
}
start_date <- as.Date(start_date)
end_date <- as.Date(end_date)
number_of_days <- as.numeric(end_date) - as.numeric(start_date)
total_demand <- demand * number_of_days / 7
daily_capacity <- capacity / 7
# allowing for fluctuations in predicted demand give a arrival list
realized_demand <- rpois(1, total_demand)
referral <-
sample(
seq(as.Date(start_date), as.Date(end_date), by = "day"),
realized_demand, replace = TRUE)
referral <- referral[order(referral)]
removal <- rep(as.Date(NA), length(referral))
referral
