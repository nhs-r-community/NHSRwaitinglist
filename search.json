[{"path":[]},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement nhs.rcommunity@nhs.net. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 NHSRwaitinglist authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/example_walkthrough.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Walkthrough of waiting list functions","text":"First, ’ll add initial data need, taken white paper.","code":"# Queue size (patients) queue_size <- 1200  # Waiting time target (weeks) waiting_time_target <- 52  # Average waiting time in the queue (weeks) avg_waiting_time <- 63  # Proportion of waiting list who have missed the 52 week target (%) perc_missing_target <- 0.51  # Demand (patients per week) demand <- 30  # Capacity (procedures per week) capacity <- 27  # Standard deviation of number of operations per week std_dev_procedures <- 160"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/example_walkthrough.html","id":"demand-capacity-and-load","dir":"Articles","previous_headings":"","what":"Demand, capacity, and load","title":"Walkthrough of waiting list functions","text":"Fact 1: Capacity must larger demand, otherwise waiting list size grow indefinitely. see load 1.11, greater 1. queue therefore grow size indefinitely. Fact 2: load greater 1, queue unstable, waiting list grow indefinitely. load less 1, queue stable load proportion time waiting list non-empty.","code":"load <- calc_queue_load(demand, capacity) load #> [1] 1.111111"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/example_walkthrough.html","id":"waiting-list-targets","dir":"Articles","previous_headings":"","what":"Waiting list targets","title":"Walkthrough of waiting list functions","text":"Fact 3: load queue less 1 chance missing target halves time increase target fixed number days. Fact 4: want chance 1.8%-0.2% achieving waiting time target, average patient waiting time quarter sixth target. case P4 waiting list, target wait 52 weeks. Thus, expect average patient operated waited 9 13 weeks. case P2 customers, target 4 weeks. Thus, mean wait typical patient one week. see target mean wait 13 weeks.","code":"target_mean_wait <- calc_target_mean_wait(waiting_time_target) target_mean_wait #> [1] 13"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/example_walkthrough.html","id":"target-queue-length","dir":"Articles","previous_headings":"","what":"Target queue length","title":"Walkthrough of waiting list functions","text":"Fact 5: Little’s Law. Assuming capacity exceeds demand, average queue size demand multiplied average waiting time. , given Fact 4 , want average waiting time quarter target, Little’s Law leads fact 6.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/example_walkthrough.html","id":"target-queue-size","dir":"Articles","previous_headings":"","what":"Target queue size","title":"Walkthrough of waiting list functions","text":"Fact 6: Target queue size demand multiplied target wait, divided 4. example, target queue size 390, actual queue 1200. queue ratio 3.1, meaning queue 3.1 times target size. waiting list size twice target queue size, consider special measures needed increase capacity, reduce waiting list size.","code":"target_queue_size <- calc_target_queue_size(demand, waiting_time_target) target_queue_size #> [1] 390  queue_ratio <- queue_size / target_queue_size queue_ratio #> [1] 3.076923"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/example_walkthrough.html","id":"relief-capacity","dir":"Articles","previous_headings":"","what":"Relief capacity","title":"Walkthrough of waiting list functions","text":"Fact 7: actual queue size double target queue size, decide target date queue brought , apply necessary relief capacity. example, decide target achieved start summer, 26 weeks away. , capacity needed 61.2 procedures per week, compared 27 procedures per week currently performed.","code":"weeks_until_target_acheived <- 26  relief_capacity <- calc_relief_capacity(   demand = demand,   queue_size = queue_size,   target_queue_size = target_queue_size,   time_to_target = weeks_until_target_acheived ) relief_capacity #> [1] 61.15385"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/example_walkthrough.html","id":"target-capacity","dir":"Articles","previous_headings":"","what":"Target capacity","title":"Walkthrough of waiting list functions","text":"discussed queue size double target capacity increased temporarily. However, queue size within acceptable range, can maintain waiting time target potentially much smaller capacity allocation waiting list. know mean waiting time (13 weeks) queue size (390 patients) waiting list operating target equilibrium. Now calculate capacity allocation maintain equilibrium long run. Fact 8: Target capacity formula, based Pollaczek-Khinchine formula. target capacity depends demand, plus additional capacity based service variability, waiting time target. parameter “F” depends variability service. know F, can assume F = 1. Values less 1 good. Higher values represent variability, turn increase capacity required maintain equilibrium. F 1, can see capacity required 30.02, 0.02 demand. F 6.58, can see capacity required 30.13, 0.13 demand. , decreasing variability service (example stabilising operating theatre schedules day day week week) effect reducing capacity required achieve given service waiting standard.","code":"# set the \"F\" variability parameter f_1 <- 1  target_capacity_1 <- calc_target_capacity(   demand = demand,   target_wait = waiting_time_target,   factor = f_1 ) target_capacity_1 #> [1] 30.01923 f_2 <- 6.58  target_capacity_2 <- calc_target_capacity(   demand = demand,   target_wait = waiting_time_target,   factor = f_2 ) target_capacity_2 #> [1] 30.12654"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/example_walkthrough.html","id":"waiting-list-pressure","dir":"Articles","previous_headings":"","what":"Waiting list pressure","title":"Walkthrough of waiting list functions","text":"Fact 9: Waiting list pressure. waiting list target waiting time, pressure waiting list twice mean waiting time divided target waiting time. pressure given waiting list less 1. pressure greater 1 waiting list likely going miss target. Measuring waiting list pressure can give comparative measure compare waiting lists, help make resource allocation decisions. P4 ENT example following: queue size large, 1200 patients waiting. waiting time target 52 weeks, average waiting time experienced 63 weeks. gives waiting list pressure 2.42. NOTE numbers slightly different white paper, changes average waiting time 63 weeks 61 weeks example. look P2 ENT example: queue size smaller, 220 patients waiting. waiting time target 4 weeks, average waiting time experienced 24. gives waiting list pressure 12. two examples pressure much shorter P2 waiting list 5 times higher P4 list. Closer attention paid P2 procedures.","code":"waiting_list_pressure_p4 <-   calc_waiting_list_pressure(     avg_waiting_time,     waiting_time_target   ) waiting_list_pressure_p4 #> [1] 2.423077 queue_size_p2 <- 220 avg_waiting_time_p2 <- 24 waiting_time_target_p2 <- 4  waiting_list_pressure_p2 <-   calc_waiting_list_pressure(     avg_waiting_time_p2,     waiting_time_target_p2   ) waiting_list_pressure_p2 #> [1] 12"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/example_walkthrough.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Walkthrough of waiting list functions","text":"worked example aims demonstrate functions available package. chronological order application :","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/example_walkthrough.html","id":"further-reading","dir":"Articles","previous_headings":"","what":"Further reading","title":"Walkthrough of waiting list functions","text":"examples practical applications, considerations, see helpful “Case Studies” section towards end white paper. END","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/three_example_waiting_lists.html","id":"anatomy-of-a-waiting-list","dir":"Articles","previous_headings":"","what":"Anatomy of a waiting list","title":"Three example waiting lists","text":"purest form, waiting list consists dates individuals arrived queue, dates left seen service (doctor, nurse, diagnostic test, ). dates waiting list additions (arrivals, referrals), waiting list removals (treatments, discharges). correspond demand (arrivals), capacity (removals). vignette going simulate 3 different waiting lists: list demand higher capacity list demand capacity similar list sufficient capacity demand","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/three_example_waiting_lists.html","id":"one","dir":"Articles","previous_headings":"","what":"1. A growing waiting list","title":"Three example waiting lists","text":"Back top… first need waiting list, can make synthetic one using wl_simulator() function. decide long simulation run , weekly demand capacity . example capacity less demand, time expect queue form. Now waiting list, visualise . can use wl_queue_size() function tell us size queue end day. can use {ggplot} make plot queue size time, expected, gets larger larger demand bigger capacity.","code":"waiting_list <- wl_simulator(   start_date = \"2020-01-01\",   end_date = \"2024-03-31\",   demand = 10, # simulating 10 patient arrivals per week   capacity = 9 # simulating 9 patients being treated per week )  head(waiting_list, 10) #>      Referral    Removal #> 1  2020-01-02 2020-01-03 #> 2  2020-01-03 2020-01-04 #> 3  2020-01-04 2020-01-05 #> 4  2020-01-04 2020-01-05 #> 5  2020-01-06 2020-01-07 #> 6  2020-01-08 2020-01-09 #> 7  2020-01-08 2020-01-10 #> 8  2020-01-08 2020-01-11 #> 9  2020-01-09 2020-01-12 #> 10 2020-01-09 2020-01-12 # calculate the queue size queue_size <- wl_queue_size(waiting_list)  head(queue_size) #>        dates queue_size #> 1 2020-01-02          1 #> 2 2020-01-03          1 #> 3 2020-01-04          2 #> 4 2020-01-05          0 #> 5 2020-01-06          1 #> 6 2020-01-07          0  tail(queue_size) #>           dates queue_size #> 1546 2024-03-26        182 #> 1547 2024-03-27        181 #> 1548 2024-03-28        183 #> 1549 2024-03-29        185 #> 1550 2024-03-30        184 #> 1551 2024-03-31        185  # visualise the queue with a plot ggplot(queue_size, aes(dates, queue_size)) +   geom_line() +   labs(     title = \"A growing waiting list\"   )"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/three_example_waiting_lists.html","id":"referral-statistics","dir":"Articles","previous_headings":"1. A growing waiting list","what":"Referral statistics","title":"Three example waiting lists","text":"Next, might interested statistics referrals, arrivals, queue. can use wl_referral_stats() function calculate . Now can see 2174 patients joined simulated waiting list, average rate 9.82 per week, 1.4 per day. close 10 patients week requested made simulated waiting list using wl_simulator(). final statistic interest coefficient variation, 1.13.","code":"referral_stats <- wl_referral_stats(waiting_list)  head(referral_stats) #>   demand_weekly demand_daily demand_cov demand_count #> 1      9.818065     1.402581   1.131775         2174"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/three_example_waiting_lists.html","id":"removal-statistics","dir":"Articles","previous_headings":"1. A growing waiting list","what":"Removal statistics","title":"Three example waiting lists","text":"Similarly, might interested statistics removals queue. can use wl_removal_stats() function calculate . Now can see 1988 patients treated removed simulated waiting list, average rate 9 per week, 1.29 per day. close 9 patients week set using wl_simulator(). final statistic interest coefficient variation (removals), 0.54.","code":"removal_stats <- wl_removal_stats(waiting_list)  head(removal_stats) #>   capacity_weekly capacity_daily capacity_cov removal_count #> 1        9.001294       1.285899    0.5363836          1988"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/three_example_waiting_lists.html","id":"overall-stats","dir":"Articles","previous_headings":"1. A growing waiting list","what":"Overall stats","title":"Three example waiting lists","text":"Finally, can calculate combined set statistics summarise waiting list. need provide target waiting time. might 2 weeks cancer referral, commonly 18 weeks standard non-cancer referral. gives us lot useful information. Taking step step: first 4 columns tell us whether load larger 1. , can expect queue continue growing indefinitely. next columns tell us resulting queue size end simulation, target size need plan order achieve 18 week waiting target, judgement whether queue large. queue large, need implement relief capacity bring within range attempting maintain queue. column report actual average patient waiting time, 64.64 weeks, compared target 18 weeks. two columns re-state coefficients variance use reporting. next two columns tell us required capacity. one contain data. queue large, \"target_capacity\" report capacity required maintain queue ’s target waiting time performance. queue large, \"relief_capacity\" report capacity required bring queue maintainable size within 26 weeks (6 months). final column reports waiting list \"pressure\". useful later comparing waiting lists differing sizes, differing targets. allows waiting list pressures compared waiting list largest number patients waiting always list largest problem meeting target.","code":"overall_stats <- wl_stats(   waiting_list = waiting_list,   target_wait = 18 # standard NHS 18 weeks target )  head(overall_stats) #>   mean_demand mean_capacity     load load_too_big count_demand queue_size #> 1    9.818065      9.001294 1.090739         TRUE         2174        185 #>   target_queue_size queue_too_big mean_wait cv_arrival cv_removal #> 1          44.18129          TRUE  64.63784   1.131775  0.5363836 #>   target_capacity relief_capacity pressure #> 1              NA        15.23417 7.181982"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/three_example_waiting_lists.html","id":"two","dir":"Articles","previous_headings":"","what":"2. A finely balanced waiting list","title":"Three example waiting lists","text":"Back top… waiting list section finely balanced. demand remains last example, now capacity increased slightly larger demand. significantly larger (approximately 2% \"spare\"). time processed 2214 patients. increase capacity allowed processing patients, also changed shape queue. Visualising queue can see time grow uncontrollably, reaching maximum size 35 patients waiting time period first simulation. also returned zero length several times simulated period.  time go straight calculating overall statistics. finely balanced example, mean demand mean capacity give load close 1, 0.9975. less one, perhaps little close comfort. can see finishing queue size 22, discussed , waiting list fluctuated size, even returned zero couple times simulated period. grown uncontrollably first example. mean wait 6.86, less target 18 weeks, quarter target. exponential shape waiting list distributions means system expect reasonable number patients experiencing waiting times 18 weeks. time, need relief capacity queue big. Instead, package recommends \"target capacity\", need provide want meet 18 week standard right proportion patients. case 10.305, marginally larger mean capacity available (10.129).","code":"waiting_list <- wl_simulator(   start_date = \"2020-01-01\",   end_date = \"2024-03-31\",   demand = 10, # simulating 10 patient arrivals per week   capacity = 10.2 # simulating 10.2 patients being treated per week )  referral_stats <- wl_referral_stats(waiting_list) head(referral_stats) #>   demand_weekly demand_daily demand_cov demand_count #> 1      10.10458     1.443512   1.153809         2236  removal_stats <- wl_removal_stats(waiting_list) head(removal_stats) #>   capacity_weekly capacity_daily capacity_cov removal_count #> 1        10.12941       1.447059    0.6896719          2214  # calculate the queue size queue_size <- wl_queue_size(waiting_list) # visualise the queue with a plot ggplot(queue_size, aes(dates, queue_size)) +   geom_line() +   labs(     title = \"A finely-balanced waiting list\"   ) overall_stats <- wl_stats(   waiting_list = waiting_list,   target_wait = 18 # standard NHS 18wk target )  head(overall_stats) #>   mean_demand mean_capacity      load load_too_big count_demand queue_size #> 1    10.10458      10.12941 0.9975489        FALSE         2236         22 #>   target_queue_size queue_too_big mean_wait cv_arrival cv_removal #> 1          45.47063         FALSE  6.863636   1.153809  0.6896719 #>   target_capacity relief_capacity  pressure #> 1        10.30535              NA 0.7626263"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/three_example_waiting_lists.html","id":"three","dir":"Articles","previous_headings":"","what":"3. A waiting list with sufficient capacity","title":"Three example waiting lists","text":"Back top… final example waiting list sufficient capacity meet demand. ’ll use recommended figure example , assuming made improvements increased available capacity 10.2 10.3 patients per week. time processed 2141 patients. Visualising queue, looks different previous examples. maximum number patients queue similar last example, time queue size frequently dropped zero. stable queue, able empty regularly. NOTE queue empty, process serving also idle. Conventional wisdom point process must excess capacity, can safely removed. case. Returning “Fact 2” Professor Neil Walton’s white paper, want low waiting times, must non-negligible fraction time services used.  calculating overall statistics. time simulation created mean demand capacity slightly lower asked , gap similar wanted. load comes 0.956, comfortably one. still lower load give headroom, may even become necessary variability demand capacity increase. mean wait 0.86, less week, comfortably less target 18 weeks. system expect 18 weeks target met vast majority patients. , package recommending \"target capacity\", time 9.91, similar margin mean demand simulation (9.699).","code":"waiting_list <- wl_simulator(   start_date = \"2020-01-01\",   end_date = \"2024-03-31\",   demand = 10, # simulating 10 patient arrivals per week   capacity = 10.3 # simulating 10.3 patients being treated per week )  referral_stats <- wl_referral_stats(waiting_list) head(referral_stats) #>   demand_weekly demand_daily demand_cov demand_count #> 1      9.698904     1.385558   1.173034         2149  removal_stats <- wl_removal_stats(waiting_list) head(removal_stats) #>   capacity_weekly capacity_daily capacity_cov removal_count #> 1        10.14005       1.448579    0.7247564          2141  # calculate the queue size queue_size <- wl_queue_size(waiting_list) # visualise the queue with a plot ggplot(queue_size, aes(dates, queue_size)) +   geom_line() +   labs(     title = \"A stable waiting list\"   ) overall_stats <- wl_stats(   waiting_list = waiting_list,   target_wait = 18 # standard NHS 18 weeks target )  head(overall_stats) #>   mean_demand mean_capacity      load load_too_big count_demand queue_size #> 1    9.698904      10.14005 0.9564943        FALSE         2149          7 #>   target_queue_size queue_too_big mean_wait cv_arrival cv_removal #> 1          43.64507         FALSE 0.8571429   1.173034  0.7247564 #>   target_capacity relief_capacity  pressure #> 1        9.910157              NA 0.0952381"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/three_example_waiting_lists.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Three example waiting lists","text":"Back top… vignette detailed wl_* functions can use explore waiting list performance. also saw altering service capacity without changing demand can dramatic effect behaviour waiting list. END","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/waiting_list_sim.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Exploring waiting list management strategies with simulation","text":"working waiting lists, may start trying understand current burdens, demand, capacity, load etc. planning dimension work, may also want ask ‘….’ ‘long …’ questions waiting list. Simulation, based properties waiting lists (assumptions change), allows us ask questions test hypotheses. following vignette acts example, modelling waiting list UK NHS hospital surgical speciality. process might flow : patient presents General Practice (GP) GP refers patient hospital ‘outpatients’ clinic clinician clinic lists patient surgery (entering waiting list) patient receive surgery, leave waiting list. consider 18 week standard waiting times.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/waiting_list_sim.html","id":"scenarios","dir":"Articles","previous_headings":"Introduction","what":"Scenarios","title":"Exploring waiting list management strategies with simulation","text":"imagine three scenarios want use simulation project waiting list future: need bring high waiting list control waiting list can afford grow (e.g. want constrain capacity, sub-contracted care organisations) list change referral growth service change final example demonstrate averaging repeated simulation, estimating uncertainty, using Monte Carlo methods. Please remember examples simulations. vary due chance time run, strength. expect get exactly result repeating; expect get average results.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/waiting_list_sim.html","id":"set-up","dir":"Articles","previous_headings":"","what":"Set-up","title":"Exploring waiting list management strategies with simulation","text":"Back top… imagine surgical treatment speciality UK NHS hospital. NHS standard waiting list 92% patients seen treated 18 weeks. Using NHSRwaitinglist package, can calculate important statistics different scenarios, starting required main waiting time meet target: makes target average wait 7.13 weeks, average independent demand/capacity. average wait must value, less, meet 92% 18 weeks.","code":"# What is the quantile value for target waiting list, # based on 92% of exponential distribution qt92 <- qexp(0.92)  # Target mean wait for 18 weeks target_mean_wait <- calc_target_mean_wait(18, qt92) target_mean_wait #> [1] 7.126656"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/waiting_list_sim.html","id":"bringing-down-a-waiting-list","dir":"Articles","previous_headings":"","what":"1. Bringing down a waiting list","title":"Exploring waiting list management strategies with simulation","text":"Back top… first scenario, assume service received 100 weekly referrals weekly capacity 80 appointments. describe balance demand capacity ‘Load’, ratio demand capacity: 100/80= 1.25. Load greater 1, waiting list grow, less 1 waiting list reduce. Let’s imagine service already running waiting list 840. simulation purposes, need set current waiting list can run simulation future state. ways set , including supplying real waiting list, simulate/generate using properties list, can manually dump load open pathways start simulation. example simulate current waiting list based knowing 840 , 20 referrals removals per week (difference demand capacity): means add 20 waiting list week. divide 840 waiting list 20, get 42 weeks. therefore need run simulation 42 weeks, stated demand capacity, generate waiting list 840. Remember simulation, stochastic. two runs identical, lead 840 list average. alternative, manually dump 840 open pathways current waiting list day start date main simulation.","code":"end_date <- as.Date(\"2023-03-31\")  # WL is 200, simulation is weekly, and capacity / demand difference is 20, # 20 added to WL each week. Therefore 420 / 20 = 21, 21 week difference for # sim start and end date:  7 x 21 = 147 days. # We take 1 day away too, to discount the end_date  start_date <- end_date - (((840 / 20) * 7) - 1)  current_wl1 <- wl_simulator(start_date = start_date,                             end_date = end_date,                             demand = 100,                             capacity = 80)  tail(wl_queue_size(current_wl1)) #>          dates queue_size #> 289 2023-03-26        784 #> 290 2023-03-27        784 #> 291 2023-03-28        797 #> 292 2023-03-29        803 #> 293 2023-03-30        804 #> 294 2023-03-31        812 current_wl1 <-   data.frame(     Referral = rep(as.Date(\"2023-03-31\"), 840)     , Removal = rep(as.Date(NA), 840)   )  # Only a single day in our waiting list so we don't need `tail()` this time wl_queue_size(current_wl1) #>        dates queue_size #> 1 2023-03-31        840"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/waiting_list_sim.html","id":"what-is-the-target-for-this-service","dir":"Articles","previous_headings":"1. Bringing down a waiting list","what":"What is the target for this service?","title":"Exploring waiting list management strategies with simulation","text":"governing resources well, want allow sustainable queue allows patients flexibly scheduled whilst still meeting targets. capacity comes cost system, seeking balance demand capacity, sustainable waiting list people seen within given target time. question : sustainable queue size delivering 92% 18 weeks, given 100 weekly demand? target queue size 712.67, currently running waiting list excess , load >1, list keep growing, without intervention, average wait times get longer.","code":"target_queue1 <-   calc_target_queue_size(demand = 100, target_wait = 18, factor = qt92) target_queue1 #> [1] 712.6656"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/waiting_list_sim.html","id":"options-for-management","dir":"Articles","previous_headings":"1. Bringing down a waiting list","what":"Options for management","title":"Exploring waiting list management strategies with simulation","text":"two ways bring waiting list like : Raise capacity (“flowing ”) Reduce demand (“fewer flowing ”)","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/waiting_list_sim.html","id":"raising-capacity","dir":"Articles","previous_headings":"1. Bringing down a waiting list > Options for management","what":"1. Raising capacity","title":"Exploring waiting list management strategies with simulation","text":"Let’s imagine able put additional clinic place offers 25 slots per week, taking waiting list pressure . need remember include waiting list simulation function, start zero. run simulation one year plot waiting list.","code":"raised_capacity_wl <-   wl_simulator(start_date = as.Date(\"2023-04-01\"),                end_date = as.Date(\"2024-03-31\"),                demand = 100,                capacity = 105,                waiting_list = current_wl1)  raised_capacity_queue <- wl_queue_size(raised_capacity_wl)  tail(raised_capacity_queue) #>          dates queue_size #> 362 2024-03-26        653 #> 363 2024-03-27        649 #> 364 2024-03-28        645 #> 365 2024-03-29        639 #> 366 2024-03-30        646 #> 367 2024-03-31        659"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/waiting_list_sim.html","id":"reducing-demand","dir":"Articles","previous_headings":"1. Bringing down a waiting list > Options for management","what":"2. Reducing demand","title":"Exploring waiting list management strategies with simulation","text":"Instead raising capacity, let’s imagine put new referral guidance reduces number referrals coming system, resulting 5 fewer referrals per week. , need remember include waiting list simulation function, start zero. run simulation one year plot waiting list. visualise , plot queue time, marking target queue size. simulation suggests either maintaining extra clinic end year (increased capacity) reducing referrals (reduced demand), return waiting list just sustainable target.","code":"reduced_demand_wl <-   wl_simulator(start_date = as.Date(\"2023-04-01\"),                end_date = as.Date(\"2024-03-31\"),                demand = 77,                capacity = 80,                waiting_list = current_wl1)  reduced_demand_queue <- wl_queue_size(reduced_demand_wl)  tail(reduced_demand_queue) #>          dates queue_size #> 362 2024-03-26        654 #> 363 2024-03-27        655 #> 364 2024-03-28        653 #> 365 2024-03-29        656 #> 366 2024-03-30        652 #> 367 2024-03-31        661 combine_queue <-   rbind(     cbind(raised_capacity_queue, type = \"raised capacity\"),     cbind(reduced_demand_queue, type = \"reduced demand\")   )   ggplot(combine_queue, aes(y = queue_size, x = dates)) +   geom_line(aes(linetype = type)) +   geom_hline(yintercept = target_queue1, colour = \"#440154FF\") +   annotate(\"text\", label = \"Target queue size\", x = as.Date(\"2024-03-31\")            , y = target_queue1, vjust = 1.2            , hjust = 1.2, colour = \"#440154FF\") +   labs(y = \"Queue Size\", x = \"Date\"        , title = \"Simulated reduction in waiting list using demand or capacity\")"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/waiting_list_sim.html","id":"our-waiting-list-can-afford-to-grow","dir":"Articles","previous_headings":"","what":"2. Our waiting list can afford to grow","title":"Exploring waiting list management strategies with simulation","text":"Back top… surface, might assume growing waiting list always bad thing. dealing health economy, must consider ‘opportunity cost’: benefits forgo using resources one place rather another. applied large, complex health economy, might mean increase waiting list, within acceptable limit, order release resources/staff/funding used elsewhere. task work large waiting list can grow whilst still meeting target, setting time period , reducing capacity accordingly. scenario, consider system 50 referrals per week, 50 capacity per week, current waiting list 82. queue load 1 , baring natural fluctuation, expect queue grow reduce. target scenario 1.: 92% within 18 weeks. means target average waiting time 7.13. Let’s first calculate target queue length: current waiting list 82, target : 356.33. means can afford let queue size increase 274.33. willing let waiting list grow next 6 months, equates : can assume reduced capacity 10.55 per week, allow queue grow. general, number decimal sensible make conservative rounding choice leads lower queue growth. case floor() growth 10. can verify using simulation, following steps example 1.: set waiting list, simulate parameters, plot:","code":"target_queue2 <-   calc_target_queue_size(demand = 50, target_wait = 18, factor = qt92) target_queue2 #> [1] 356.3328 current_queue <- 82 queue_growth <- target_queue2 - current_queue weeks_to_grow <- 26 #52 weeks per year / 2 for 6 months  queue_growth / weeks_to_grow #> [1] 10.55126 current_wl2 <-   data.frame(     Referral = rep(as.Date(\"2024-03-31\"), current_queue)     , Removal = rep(as.Date(NA), current_queue)   )  raise_wl_sim <-   wl_simulator(start_date = as.Date(\"2024-04-01\"),                end_date = as.Date(\"2024-09-30\"),                demand = 50,                capacity =  (50 - 10), # 10 = floor(queue_growth / weeks_to_grow)                waiting_list = current_wl2)  raised_wl <- wl_queue_size(raise_wl_sim)  ggplot(raised_wl, aes(y = queue_size, x = dates)) +   geom_line() +   geom_hline(yintercept = target_queue2, colour = \"#21908CFF\") +   annotate(\"text\", label = \"Target queue size\", x = as.Date(\"2024-04-01\")            , y = target_queue2, vjust = 1.2, hjust = 0, colour = \"#21908CFF\") +   labs(y = \"Queue Size\", x = \"Date\"        , title = \"Simulated waiting list after allowing waiting list to grow\")"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/waiting_list_sim.html","id":"how-our-list-will-change-with-referral-growth-service-change","dir":"Articles","previous_headings":"","what":"3. How our list will change with referral growth / service change","title":"Exploring waiting list management strategies with simulation","text":"complicated example make two assumptions 5-year modelling period: Referrals grow 5% per year year 3, service change come place removes 20% referrals. simulate , need set data inputs reflect assumptions. set scenario starting 100 referrals per week, 100 capacity per week, waiting list 500. range calculations sustainable list size, assuming slightly different target first 2 examples: 95% seen within 18 weeks. case sustainable waiting list 600.85, true start period. Given growth change assumptions, need construct control table maps values power simulation. worked R, users may find easier build spreadsheet application. also need update target queue size. setting based current demand, yearly demand anticipated demand last period. , take second approach, requires calculation row. now need run simulation line control table. handy way capture R use list(). First initialise list right size receive output, efficient way capture . can run first line table simulation current waiting list: can now run rest table using loop, referencing last run waiting list e.g. run 2, waiting list run 1, achieved sim3[[- 1]]: can now plot see list looks like. Key points note : target queue size calculated start_date, .e. 1st April, way lines draw connects points straight line. Depending variation simulation, waiting list peaks sustainable target value 2025/26, demand reduction pulls list back sustainable size. case releasing capacity late 2026 onwards, list sustainable size.","code":"# Target mean wait for 95% at 18 weeks target_mean_wait3 <- calc_target_mean_wait(18, qexp(0.95)) target_mean_wait3 #> [1] 6.008548  target_queue3 <-   calc_target_queue_size(demand = 100, target_wait = 18, factor = qexp(0.95)) target_queue3 #> [1] 600.8548 ctrl_tbl <- data.frame(   start_date = as.Date(c(\"2024-04-01\", \"2025-04-01\", \"2026-04-01\"                          , \"2027-04-01\", \"2028-04-01\"), format = \"%Y-%m-%d\"),   end_date = as.Date(c(\"2025-03-31\", \"2026-03-31\", \"2027-03-31\"                        , \"2028-03-31\", \"2029-03-31\"), format = \"%Y-%m-%d\"),   demand = 100,   capacity = 100 )  # Manually setting sim properties to illustrate: ctrl_tbl$demand[2] <- ctrl_tbl$demand[1] * 1.05 ctrl_tbl$demand[3] <- ctrl_tbl$demand[2] * 1.05 * 0.8 # 5% growth, 20% reduction ctrl_tbl$demand[4] <- ctrl_tbl$demand[3] * 1.05 ctrl_tbl$demand[5] <- ctrl_tbl$demand[4] * 1.05  ctrl_tbl #>   start_date   end_date   demand capacity #> 1 2024-04-01 2025-03-31 100.0000      100 #> 2 2025-04-01 2026-03-31 105.0000      100 #> 3 2026-04-01 2027-03-31  88.2000      100 #> 4 2027-04-01 2028-03-31  92.6100      100 #> 5 2028-04-01 2029-03-31  97.2405      100 ctrl_tbl$target_queue_size <-   calc_target_queue_size(demand = ctrl_tbl$demand                          , target_wait = 18                          , factor = qexp(0.95)) current_wl3 <-   data.frame(Referral = rep(as.Date(\"2024-03-31\"), 500)              , Removal = rep(as.Date(NA), 500)) # Initialise a list of the same length as the table sim3 <- list(NROW(ctrl_tbl))  # Run the first line and current waiting list sim3[[1]] <-   wl_simulator(start_date = ctrl_tbl$start_date[1]                , end_date = ctrl_tbl$end_date[1]                , demand = ctrl_tbl$demand[1]                , capacity = ctrl_tbl$capacity[1]                , waiting_list = current_wl3) # Loop through and simulate each section # Loop picks up each previous waiting list for (i in seq(2, 5)) {   sim3[[i]] <-     wl_simulator(start_date = ctrl_tbl$start_date[i]                  , end_date = ctrl_tbl$end_date[i]                  , demand = ctrl_tbl$demand[i]                  , capacity = ctrl_tbl$capacity[i]                  , waiting_list = sim3[[i - 1]]) }  queue_over_time <- wl_queue_size(sim3[[5]]) ggplot(queue_over_time, aes(y = queue_size, x = dates)) +   geom_line() +   geom_line(aes(y = target_queue_size, x = start_date)             , colour = \"#A69D75FF\"             , data =               data.frame(                 target_queue_size =                 c(ctrl_tbl$target_queue_size, ctrl_tbl$target_queue_size[5]),                 start_date =                 c(ctrl_tbl$start_date, ctrl_tbl$end_date[5])               )) +   annotate(\"text\", label = \"Target queue size\", x = ctrl_tbl$start_date[5]            , y = ctrl_tbl$target_queue_size[5], vjust = 1.2, hjust = 0.2            , colour = \"#A69D75FF\") +   geom_vline(xintercept = as.Date(\"2026-04-01\"), colour = \"red\") +   annotate(\"text\", label = \"20% demand\\nreduction\", x = as.Date(\"2026-04-01\")            , y = 200, hjust = 1.1, colour = \"red\") +   labs(y = \"Queue Size\", x = \"Date\"        , title = \"Simulated waiting list, 5% year on year growth.\"        , subtitle = \"20% demand reduction from Apr-2026\")"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/articles/waiting_list_sim.html","id":"estimating-uncertainty-via-monte-carlo-methods","dir":"Articles","previous_headings":"","what":"4. Estimating uncertainty via Monte Carlo methods","title":"Exploring waiting list management strategies with simulation","text":"Back top… examples shown can simulate waiting lists, single simulation run based random draws distribution. change time due change, predictable way. can get idea uncertainty around methods using Monte Carlo methods: running repeatedly averaging values. Using example 1., can repeatedly run several ways. method wraps simulation queue size functions inside function. means run return data.frame daily queue sizes. replicate function runs simulation 50 times, returns list 50 replicates. reality, run many times , 50 keeps vignette’s build time minimum leads wider visible confidence interval chart . need take output, reformat list, chose average events. example , pull single table aggregate average values per day. always right approach, depends question. case, helps give robust estimate average effects allows us put point-wise percentile range confidence interval around , using daily means simulation. Alternatives might fit linear non-linear models across range use confidence intervals / bands approach, demonstrated vignette nlraa package. can now produce similar plot one section 1, using average value 95% confidence interval.  averaging led straighter line trend range uncertainty around projection. Alternatively present 25th - 75th percentile range. type Monte Carlo process can applied various situation building simulation function, repeatedly executing function (parallel), collected results calculating summary statistics.","code":"sim_func <- function(run_id) {   sim <- wl_simulator(start_date = as.Date(\"2023-04-01\"),                       end_date = as.Date(\"2024-03-31\"),                       demand = 100,                       capacity = 105,                       waiting_list = current_wl1)    cbind(wl_queue_size(sim), run_id) }  # sequence to iterate over run_sequence <- 1:50  raised_capacity_wl_mc <- lapply(run_sequence, sim_func) mc_bind <- do.call(\"rbind\", raised_capacity_wl_mc) mc_agg <-   aggregate(     queue_size ~ dates     , data = mc_bind     , FUN = \\(x) {       c(mean_q = mean(x),         median_q = median(x),         lower_95CI = mean(x) -  (1.96 * (sd(x) / sqrt(length(x)))),         upper_95CI = mean(x) +  (1.96 * (sd(x) / sqrt(length(x)))),         q_25 = quantile(x, .025, names = FALSE),         q_75 = quantile(x, .975, names = FALSE))     }   ) mc_agg <- data.frame(dates = as.Date(mc_agg$dates), unlist(mc_agg$queue_size)) ggplot(mc_bind, aes(x = dates)) +   geom_line(aes(y = queue_size, group = i), alpha = 0.5, col = \"grey\") +   geom_ribbon(aes(y = mean_q, ymin = lower_95CI, ymax = upper_95CI)               , alpha = 0.5, data = mc_agg, fill = \"red\") +   geom_line(aes(y = mean_q), data = mc_agg, col = \"black\") +   geom_hline(yintercept = target_queue1, colour = \"#440154FF\") +   annotate(\"text\", label = \"Target queue size\", x = as.Date(\"2024-02-01\")            , y = target_queue1, vjust = -1, colour = \"#440154FF\") +   labs(y = \"Queue Size\", x = \"Date\"        , title = \"Simulated waiting list after raising capacity\"        , subtitle = \"Average WL over 50 runs, with 95% confidence interval\")"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Neil Walton. Author. Jacqueline Grout. Contributor. Zoë Turner. Contributor. Matt Dray. Author. Paul Fenton. Contributor. Peter Shakeshaft. Contributor. David Foord. Contributor. Tom Smith. Author. Chris Mainey. Maintainer, author. Mohammed Mohammed. Contributor. NHS-R community. Copyright holder.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Walton N, Dray M, Smith T, Mainey C (2025). NHSRwaitinglist: Waiting List Metrics Using Queuing Theory. R package version 0.1.2, https://nhs-r-community.github.io/NHSRwaitinglist/.","code":"@Manual{,   title = {NHSRwaitinglist: Waiting List Metrics Using Queuing Theory},   author = {Neil Walton and Matt Dray and Tom Smith and Chris Mainey},   year = {2025},   note = {R package version 0.1.2},   url = {https://nhs-r-community.github.io/NHSRwaitinglist/}, }"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/index.html","id":"nhsrwaitinglist","dir":"","previous_headings":"","what":"Waiting List Metrics Using Queuing Theory","title":"Waiting List Metrics Using Queuing Theory","text":"{NHSRwaitinglist} R package implementing waiting list management approach described paper Understanding Waiting Lists Pressures Fong et al (2022). methodology presented Neil Walton, Professor Operations Management Durham University Business School. package contributed members NHS-R Community, aim making simpler NHS analysts adopt methods analysis waiting lists.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/index.html","id":"explanatory-videos","dir":"","previous_headings":"","what":"Explanatory Videos","title":"Waiting List Metrics Using Queuing Theory","text":"videos explain Operations Management methodologies encapsulated package. Click view YouTube.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Waiting List Metrics Using Queuing Theory","text":"can install current version {NHSRwaitinglist} GitHub . installed GitHub , may first need create store “Personal Access Token” (PAT) grant access account, example following {usethis} guide.","code":"# Install from CRAN install.packages(\"NHSRwaitinglist\")  # install.packages(\"remotes\") remotes::install_github(\"nhs-r-community/NHSRwaitinglist\", build_vignettes = TRUE)"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Waiting List Metrics Using Queuing Theory","text":"minimal example . look detail functions within package ways using , good idea review first two vignettes: example walkthrough vignette takes step--step walk white paper, using six core functions package. three example waiting lists vignette simulates three closely related waiting lists, uses package functions explore characteristics. basic, package can used simulate waiting list (dataframe waiting list addition dates removal dates), compute important statistics. course, already waiting list data ready analyse, can skip simulation step code .","code":"# load the package library(NHSRwaitinglist)  # simulate a waiting list waiting_list <- wl_simulator(   start_date = \"2020-01-01\",   end_date = \"2024-03-31\",   demand = 10, # simulating 10 patient arrivals per week   capacity = 10.2 # simulating 10.2 patients being treated per week )  # compute some waiting list statistics overall_stats <- wl_stats(   waiting_list = waiting_list,   target_wait = 18 # standard NHS 18wk target )  # review the minimal dataset needed to define a waiting list (first 5 rows only) knitr::kable(head(waiting_list, 5)) # review the waiting list statistics knitr::kable(overall_stats)"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Waiting List Metrics Using Queuing Theory","text":"want learn project, please join discussion NHS-R Community Slack group specific channel #managing-waiting-lists. Please see guidance contribute. project released Contributor Code Conduct. contributing project, agree abide terms. simplest way contribute raise issue detailing feature functionality like see added, unexpected behaviour bugs experienced.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/index.html","id":"pull-request-workflow","dir":"","previous_headings":"Contributing","what":"Pull-Request workflow","title":"Waiting List Metrics Using Queuing Theory","text":"welcome also submit Pull Requests , main branch protected won’t accept pushes directly even added repository member, workflow (forked repository member, clone repository member): Create new branch descriptive name Commit new branch (add code delete code make changes) Push commits Create pull-request GitHub signal work ready merged Tag one reviewers (@ThomUK @ChrisMainey) contribution can reviewed merged main","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/index.html","id":"contributors-","dir":"","previous_headings":"","what":"Contributors ✨","title":"Waiting List Metrics Using Queuing Theory","text":"Thanks goes wonderful people (emoji key): project follows -contributors specification. Contributions kind welcome!","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_queue_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Queue Load — calc_queue_load","title":"Calculate Queue Load — calc_queue_load","text":"Calculates queue load. queue load number arrivals occur every patient leaving queue (given waiting list empty). also described rate service queue. queue load calculated dividing demand capacity: queue_load = demand / capacity.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_queue_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Queue Load — calc_queue_load","text":"","code":"calc_queue_load(demand, capacity)"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_queue_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Queue Load — calc_queue_load","text":"demand Numeric value rate demand units target wait - e.g. target wait weeks, demand units patients/week. capacity Numeric value number patients can served (removals) waiting list week.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_queue_load.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Queue Load — calc_queue_load","text":"Numeric value load ratio demand capacity.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_queue_load.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Queue Load — calc_queue_load","text":"","code":"# If 30 patients are added to the waiting list each week (demand) and 27 # removed (capacity) this results in a queue load of 1.11 (30/27). calc_queue_load(30, 27) #> [1] 1.111111"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_relief_capacity.html","id":null,"dir":"Reference","previous_headings":"","what":"Relief Capacity — calc_relief_capacity","title":"Relief Capacity — calc_relief_capacity","text":"Calculates required relief capacity achieve target queue size given period time function demand, queue size, target queue size time period. Relief Capacity required Queue Size > 2 * Target Queue Size. Relief Capacity = Current Demand + (Queue Size - Target Queue Size)/Time Steps WARNING!: make sure units match. .e. demand measured per week time_to_target weeks demand per day time_to_target per day","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_relief_capacity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relief Capacity — calc_relief_capacity","text":"","code":"calc_relief_capacity(   demand,   queue_size,   target_queue_size,   time_to_target = 26,   num_referrals = 0,   cv_demand = 0 )"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_relief_capacity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relief Capacity — calc_relief_capacity","text":"demand Numeric value rate demand units target wait e.g. target wait weeks, demand units patients/week. queue_size Numeric value current number patients queue. target_queue_size Numeric value desired number patients queue. time_to_target Numeric value desired number time-steps reach target queue size . num_referrals Numeric value number referrals per time step. cv_demand completed","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_relief_capacity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relief Capacity — calc_relief_capacity","text":"numeric value required rate capacity achieve target queue size given period time.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_relief_capacity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relief Capacity — calc_relief_capacity","text":"","code":"# If demand is 30 patients per week, the current queue size is 1200 and the # target is to achieve a queue size of 390 in 26 weeks, then  # Relief Capacity = 30 + (1200 - 390)/26 = 61.15 patients per week.  calc_relief_capacity(30, 1200, 390, 26) #> [1] 61.15385"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_target_capacity.html","id":null,"dir":"Reference","previous_headings":"","what":"Target Capacity — calc_target_capacity","title":"Target Capacity — calc_target_capacity","text":"Applies Kingman/Marchal's Formula :   cvd           = coefficient variation time arrivals cvd           = coefficient variation service times waiting_time  = target_wait / factor","code":"capacity = demand + (cvd**2 + cvc**2) / waiting_time"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_target_capacity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Target Capacity — calc_target_capacity","text":"","code":"calc_target_capacity(   demand,   target_wait,   factor = 4,   cv_demand = 1,   cv_capacity = 1 )"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_target_capacity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Target Capacity — calc_target_capacity","text":"demand Numeric value rate demand units target wait e.g. target wait weeks, demand units patients/week. target_wait Numeric value number weeks set target within patient seen. factor amount divide target waiting list e.g. target 52 weeks mean wait 13 factor 4 cv_demand coefficient variation time arrivals cv_capacity coefficient variation removals due operations completed","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_target_capacity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Target Capacity — calc_target_capacity","text":"numeric. capacity required achieve target waiting time.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_target_capacity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Target Capacity — calc_target_capacity","text":"","code":"demand <- 4 # weeks target_wait <- 52 # weeks  # number of operations per week to have mean wait of 52/4 calc_target_capacity(demand, target_wait) #> [1] 4.076923"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_target_mean_wait.html","id":null,"dir":"Reference","previous_headings":"","what":"Average Waiting Time — calc_target_mean_wait","title":"Average Waiting Time — calc_target_mean_wait","text":"calculates target mean wait given two inputs target_wait numerical value factor. average wait actually target mean wait calculated follows: target_wait / factor. want chance 1.8%-0.2% making waiting time target, average patient waiting time quarter sixth target. Therefore: mean wait sit somewhere target_wait/factor=6 < Average Waiting Time < target_wait/factor=4.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_target_mean_wait.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Average Waiting Time — calc_target_mean_wait","text":"","code":"calc_target_mean_wait(target_wait, factor = 4)"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_target_mean_wait.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Average Waiting Time — calc_target_mean_wait","text":"target_wait Numeric value number weeks set target within patient seen. factor Numeric factor used average wait calculation - get quarter target use factor=4 one sixth target use factor = 6 etc. Defaults 4.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_target_mean_wait.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Average Waiting Time — calc_target_mean_wait","text":"Numeric value target mean waiting time achieve given target wait.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_target_mean_wait.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Average Waiting Time — calc_target_mean_wait","text":"","code":"# If the target wait is 52 weeks then the target mean wait with a factor of 4 # would be 13 weeks and with a factor of 6 it would be 8.67 weeks. calc_target_mean_wait(52, 4) #> [1] 13"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_target_queue_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Target Queue Size — calc_target_queue_size","title":"Target Queue Size — calc_target_queue_size","text":"Uses Little's Law calculate target queue size achieve target waiting time function observed demand, target wait variability factor used target mean waiting time calculation. Target Queue Size = Demand * Target Wait / 4. average wait sit somewhere target_wait/factor=6 < Average Waiting Time < target_wait/factor=4 factor defaults 4. applicable Capacity > Demand.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_target_queue_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Target Queue Size — calc_target_queue_size","text":"","code":"calc_target_queue_size(demand, target_wait, factor = 4)"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_target_queue_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Target Queue Size — calc_target_queue_size","text":"demand Numeric value rate demand units target wait e.g. target wait weeks, demand units patients/week. target_wait Numeric value number weeks set target within patient seen. factor Numeric factor used average wait calculation get quarter target use factor=4 get one sixth target use factor = 6 etc. Defaults 4.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_target_queue_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Target Queue Size — calc_target_queue_size","text":"Numeric target queue length.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_target_queue_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Target Queue Size — calc_target_queue_size","text":"","code":"# If demand is 30 patients per week and the target wait is 52 weeks, then the # Target queue size = 30 * 52/4 = 390 patients.  calc_target_queue_size(30, 52, 4) #> [1] 390"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_waiting_list_pressure.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Waiting List Pressure — calc_waiting_list_pressure","title":"Calculate Waiting List Pressure — calc_waiting_list_pressure","text":"waiting list target waiting time, pressure waiting list twice mean delay divided waiting list target. pressure given waiting list less 1. pressure greater 1 waiting list likely going miss target. waiting list pressure calculated follows: pressure = 2 * mean_wait / target_wait.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_waiting_list_pressure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Waiting List Pressure — calc_waiting_list_pressure","text":"","code":"calc_waiting_list_pressure(mean_wait, target_wait)"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_waiting_list_pressure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Waiting List Pressure — calc_waiting_list_pressure","text":"mean_wait Numeric value target mean waiting time achieve given target wait. target_wait Numeric value number weeks set target within patient seen.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_waiting_list_pressure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Waiting List Pressure — calc_waiting_list_pressure","text":"Numeric value wait_pressure waiting list pressure.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/calc_waiting_list_pressure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Waiting List Pressure — calc_waiting_list_pressure","text":"","code":"calc_waiting_list_pressure(63, 52) #> [1] 2.423077"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/create_waiting_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Waiting List — create_waiting_list","title":"Create Waiting List — create_waiting_list","text":"Creates waiting list using parameters specified","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/create_waiting_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Waiting List — create_waiting_list","text":"","code":"create_waiting_list(   n,   mean_arrival_rate,   mean_wait,   start_date = Sys.Date(),   limit_removals = TRUE,   sd = 0,   rott = 0,   ... )"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/create_waiting_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Waiting List — create_waiting_list","text":"n Numeric value rate demand units target wait e.g. target wait weeks, demand units patients/week. mean_arrival_rate Numeric value mean daily arrival rate. mean_wait Numeric value mean wait time treatment/waiting list. start_date Character value date start generated waiting list. limit_removals Defaults TRUE sd Numeric value, standard deviation. Defaults 0. rott Numeric value, proportion referrals randomly flagged ROTT. Defaults 0. ... Container list","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/create_waiting_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Waiting List — create_waiting_list","text":"tibble randomly generated patient records following columns: pat_id Integer. Unique identifier patient. addition_date Date. date patient added waiting list. removal_date Date. date patient removed waiting list. wait_length Numeric. Number days addition removal dates. rott Logical. Whether removal reasons treatment (ROTT). Additional columns may included supplied via ..., named vectors (e.g., patient-level variables) compatible length merged output tibble.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/create_waiting_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Waiting List — create_waiting_list","text":"","code":"create_waiting_list(366, 50, 21, \"2024-01-01\", 10, 0.1) #> # A tibble: 18,132 × 5 #>    pat_id addition_date removal_date wait_length rott  #>     <int> <date>        <date>             <dbl> <lgl> #>  1      1 2024-01-01    2024-02-06         35.8  FALSE #>  2      2 2024-01-01    2024-02-19         49.0  FALSE #>  3      3 2024-01-01    2024-01-05          3.79 FALSE #>  4      4 2024-01-01    2024-02-18         48.3  FALSE #>  5      5 2024-01-01    2024-01-10          8.75 FALSE #>  6      6 2024-01-01    2024-01-03          1.52 FALSE #>  7      7 2024-01-01    2024-01-15         14.3  FALSE #>  8      8 2024-01-01    2024-01-25         24.2  FALSE #>  9      9 2024-01-01    2024-01-06          5.16 FALSE #> 10     10 2024-01-01    2024-01-18         16.9  FALSE #> # ℹ 18,122 more rows"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/demographic_data.html","id":null,"dir":"Reference","previous_headings":"","what":"demographic data — demographic_data","title":"demographic data — demographic_data","text":"demographic data","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/demographic_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"demographic data — demographic_data","text":"","code":"data(demographic_data)"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/demographic_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"demographic data — demographic_data","text":"Data frame 9 columns hospital_site ODS hospital site code ... Others file updated","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/demographic_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"demographic data — demographic_data","text":"","code":"data(demographic_data)"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/opcs4.html","id":null,"dir":"Reference","previous_headings":"","what":"OPCS4 data — opcs4","title":"OPCS4 data — opcs4","text":"OPCS4 data","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/opcs4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OPCS4 data — opcs4","text":"","code":"data(opcs4)"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/opcs4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OPCS4 data — opcs4","text":"Data frame 9 columns code_1digit first digit OPCS4 code, 'chapter' name_1digit name/group 'chapter' OPCS4 code ... Others file updated","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/opcs4.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"OPCS4 data — opcs4","text":"https://biobank.ndph.ox.ac.uk/ukb/coding.cgi?id=240","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/opcs4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OPCS4 data — opcs4","text":"","code":"data(opcs4)"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/sim_patients.html","id":null,"dir":"Reference","previous_headings":"","what":"Generator of NHS patients — sim_patients","title":"Generator of NHS patients — sim_patients","text":"Generates simulated NHS patients","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/sim_patients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generator of NHS patients — sim_patients","text":"","code":"sim_patients(n_rows = 10, start_date = NULL)"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/sim_patients.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generator of NHS patients — sim_patients","text":"n_rows Number rows/patients generate start_date Start date (needed generate patient ages)","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/sim_patients.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generator of NHS patients — sim_patients","text":"data.frame representing empty waiting list following columns: Referral Date. Referral date; values NA. Removal Date. Removal date; values NA. Withdrawal Date. Patient withdrawal date; values NA Priority Numeric. Waiting list priority level, 1 (urgent) 4 (least urgent). Target_wait Numeric. Target number days patient wait assigned priority level (e.g., 28 days priority 2) Name Character. Patient name format \"Last, First\". Birth_date Date. Date birth. NHS_number Integer. Patient identifier, 100,000,000. Specialty_code Character. One-letter code representing specialty procedure. Specialty Character. Full name specialty associated procedure. OPCS Character. OPCS-4 code selected procedure. Procedure Character. Name selected procedure. Consultant Character. Consultant name format \"Last, First\".","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/sim_patients.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generator of NHS patients — sim_patients","text":"","code":"sim_patients() #>    Referral Removal Withdrawal Priority Target_wait               Name #> 1      <NA>    <NA>       <NA>        2          28      Holland, Niya #> 2      <NA>    <NA>       <NA>        3          84 el-Jafri, Sahheeda #> 3      <NA>    <NA>       <NA>        2          28     Montoya, Edwin #> 4      <NA>    <NA>       <NA>        1           7   Peiffer, Kristen #> 5      <NA>    <NA>       <NA>        2          28    Wheeler, Ka Ron #> 6      <NA>    <NA>       <NA>        4         365       Wesley, Karl #> 7      <NA>    <NA>       <NA>        4         365     Duwaldt, Corin #> 8      <NA>    <NA>       <NA>        3          84      Dwyer, Lakota #> 9      <NA>    <NA>       <NA>        2          28      Reece, Jordan #> 10     <NA>    <NA>       <NA>        2          28   Cunnigan, Xavier #>    Birth_date NHS_number Specialty_code #> 1  1999-10-11   77560053              Z #> 2  1995-04-08   19551478              Z #> 3  1957-08-10   94383173              O #> 4  2024-01-11    2538666              L #> 5  2004-10-13   76510082              H #> 6  1978-03-02   36311289              H #> 7  1998-01-18   72529884              Z #> 8  2025-05-02   86506985              E #> 9  1944-01-14   65128374              B #> 10 1993-11-07   36904721              A #>                                          Specialty OPCS #> 1  Subsidiary Classification of Sites of Operation Z792 #> 2  Subsidiary Classification of Sites of Operation Z814 #> 3                                   Overflow codes O122 #> 4                               Arteries and Veins L622 #> 5                           Lower Digestive System H519 #> 6                           Lower Digestive System H084 #> 7  Subsidiary Classification of Sites of Operation Z948 #> 8                                Respiratory Tract E078 #> 9                      Endocrine System and Breast B312 #> 10                                  Nervous System A346 #>                                                 Procedure #> 1                                         Z79.2 Os calcis #> 2                                    Z81.4 Shoulder joint #> 3                                  O12.2 Maxillary artery #> 4                L62.2 Open embolectomy of femoral artery #> 5               H51.9 Unspecified excision of haemorrhoid #> 6            H08.4 Transverse colectomy and ileostomy HFQ #> 7                          Z94.8 Specified laterality NEC #> 8  E07.8 Other specified other plastic operations on nose #> 9                          B31.2 Augmentation mammoplasty #> 10       A34.6 Exploration of glossopharyngeal nerve (ix) #>                 Consultant #> 1        Herrera, Samantha #> 2             Lee, Killian #> 3        Hernandez, Camilo #> 4      Passantino, Brenden #> 5         Nguyen, Crissela #> 6              Zheng, Tina #> 7          Reed, Gabrielle #> 8  Escobedo Rangel, Selina #> 9         el-Mir, Ghazaala #> 10           Ortiz, Draven"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/sim_schedule.html","id":null,"dir":"Reference","previous_headings":"","what":"Generator a list of dates to schedule — sim_schedule","title":"Generator a list of dates to schedule — sim_schedule","text":"Generates list dates given range","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/sim_schedule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generator a list of dates to schedule — sim_schedule","text":"","code":"sim_schedule(n_rows = 10, start_date = NULL, daily_capacity = 1)"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/sim_schedule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generator a list of dates to schedule — sim_schedule","text":"n_rows Number rows/patients generate start_date Start date (needed generate patient ages) daily_capacity Number patients per day","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/sim_schedule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generator a list of dates to schedule — sim_schedule","text":"vector Date values representing scheduled procedure dates. length vector equal n_rows, dates spaced according specified daily_capacity.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_insert.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert new referrals into the waiting list — wl_insert","title":"Insert new referrals into the waiting list — wl_insert","text":"Adds new referrals, columns set NA.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_insert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert new referrals into the waiting list — wl_insert","text":"","code":"wl_insert(waiting_list, additions, referral_index = 1)"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_insert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert new referrals into the waiting list — wl_insert","text":"waiting_list data.frame. df referral dates removals additions Date character vector (format 'YYYY-MM-DD'). list referral dates add waiting list referral_index index column waiting_list contains referral dates. Defaults first column.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_insert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert new referrals into the waiting list — wl_insert","text":"data.frame representing updated waiting list, additional referrals dates column specified referral_index. columns filled NA new rows. result sorted referral column.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_insert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert new referrals into the waiting list — wl_insert","text":"","code":"referrals <- c.Date(\"2024-01-01\", \"2024-01-04\", \"2024-01-10\", \"2024-01-16\") removals <- c.Date(\"2024-01-08\", NA, NA, NA) waiting_list <- data.frame(\"referral\" = referrals, \"removal\" = removals) additions <- c.Date(\"2024-01-03\", \"2024-01-05\", \"2024-01-18\") longer_waiting_list <- wl_insert(waiting_list, additions)"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_join.html","id":null,"dir":"Reference","previous_headings":"","what":"Join two waiting list — wl_join","title":"Join two waiting list — wl_join","text":"Take two waiting list sorting date order","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_join.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join two waiting list — wl_join","text":"","code":"wl_join(wl_1, wl_2, referral_index = 1)"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_join.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join two waiting list — wl_join","text":"wl_1 waiting list: dataframe consisting addition removal dates wl_2 waiting list: dataframe consisting addition removal dates referral_index column index referrals listed","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_join.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join two waiting list — wl_join","text":"data.frame representing combined waiting list, created joining wl_1 wl_2. result sorted referral date column specified referral_index. column structure preserved input data frames.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_join.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Join two waiting list — wl_join","text":"","code":"referrals <- c.Date(\"2024-01-01\",\"2024-01-04\",\"2024-01-10\",\"2024-01-16\") removals <- c.Date(\"2024-01-08\",NA,NA,NA) wl_1 <- data.frame(\"referral\" = referrals ,\"removal\" = removals )  referrals <- c.Date(\"2024-01-04\",\"2024-01-05\",\"2024-01-16\",\"2024-01-25\") removals <- c.Date(\"2024-01-09\",NA,\"2024-01-19\",NA) wl_2 <- data.frame(\"referral\" = referrals ,\"removal\" = removals ) wl_join(wl_1,wl_2) #>     referral    removal #> 1 2024-01-01 2024-01-08 #> 2 2024-01-04       <NA> #> 3 2024-01-04 2024-01-09 #> 4 2024-01-05       <NA> #> 5 2024-01-10       <NA> #> 6 2024-01-16       <NA> #> 7 2024-01-16 2024-01-19 #> 8 2024-01-25       <NA>"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_queue_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Queue size calculator — wl_queue_size","title":"Queue size calculator — wl_queue_size","text":"Calculates queue sizes waiting list","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_queue_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Queue size calculator — wl_queue_size","text":"","code":"wl_queue_size(   waiting_list,   start_date = NULL,   end_date = NULL,   referral_index = 1,   removal_index = 2 )"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_queue_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Queue size calculator — wl_queue_size","text":"waiting_list data.frame consisting addition removal dates start_date Date character (format 'YYYY-MM-DD'); start calculation period end_date Date character (format 'YYYY-MM-DD'); end calculation period referral_index index referrals waiting_list removal_index index removals waiting_list","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_queue_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Queue size calculator — wl_queue_size","text":"data.frame containing size waiting list day specified date range. start_date /end_date NULL, function uses earliest latest referral dates input data.frame. returned data.frame following columns: dates Date. date within computed range, starting first referral. queue_size Numeric. Number patients waiting list date.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_queue_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Queue size calculator — wl_queue_size","text":"","code":"referrals <- c.Date(\"2024-01-01\", \"2024-01-04\", \"2024-01-10\", \"2024-01-16\") removals <- c.Date(\"2024-01-08\", NA, NA, NA) waiting_list <- data.frame(\"referral\" = referrals, \"removal\" = removals) wl_queue_size(waiting_list) #>         dates queue_size #> 1  2024-01-01          1 #> 2  2024-01-02          1 #> 3  2024-01-03          1 #> 4  2024-01-04          2 #> 5  2024-01-05          2 #> 6  2024-01-06          2 #> 7  2024-01-07          2 #> 8  2024-01-08          1 #> 9  2024-01-09          1 #> 10 2024-01-10          2 #> 11 2024-01-11          2 #> 12 2024-01-12          2 #> 13 2024-01-13          2 #> 14 2024-01-14          2 #> 15 2024-01-15          2 #> 16 2024-01-16          3"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_referral_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate some stats about referrals — wl_referral_stats","title":"Calculate some stats about referrals — wl_referral_stats","text":"Calculate stats referrals","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_referral_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate some stats about referrals — wl_referral_stats","text":"","code":"wl_referral_stats(   waiting_list,   start_date = NULL,   end_date = NULL,   referral_index = 1 )"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_referral_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate some stats about referrals — wl_referral_stats","text":"waiting_list data.frame. df referral dates removals start_date Date character (format 'YYYY-MM-DD'); start date calculate end_date Date character (format 'YYYY-MM-DD'); end date calculate referral_index column index referrals","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_referral_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate some stats about referrals — wl_referral_stats","text":"data.frame following summary statistics referrals/demand: demand_weekly Numeric. Mean number additions waiting list per week. demand_daily Numeric. Mean number additions waiting list per day. demand_cov Numeric. Coefficient variation time additions waiting list. demand_count Numeric. Total demand full time period.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_referral_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate some stats about referrals — wl_referral_stats","text":"","code":"referrals <- c.Date(\"2024-01-01\", \"2024-01-04\", \"2024-01-10\", \"2024-01-16\") removals <- c.Date(\"2024-01-08\", NA, NA, NA) waiting_list <- data.frame(\"referral\" = referrals, \"removal\" = removals) referral_stats <- wl_referral_stats(waiting_list)"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_removal_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate some stats about removals — wl_removal_stats","title":"Calculate some stats about removals — wl_removal_stats","text":"Calculate stats removals","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_removal_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate some stats about removals — wl_removal_stats","text":"","code":"wl_removal_stats(   waiting_list,   start_date = NULL,   end_date = NULL,   referral_index = 1,   removal_index = 2 )"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_removal_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate some stats about removals — wl_removal_stats","text":"waiting_list data.frame. df referral dates removals start_date Date character (format 'YYYY-MM-DD'); start date calculate . end_date Date character (format 'YYYY-MM-DD'); end date calculate . referral_index Index referral column waiting_list. removal_index Index removal column waiting_list.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_removal_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate some stats about removals — wl_removal_stats","text":"data.frame following summary statistics removals/capacity: capacity_weekly Numeric. Mean number removals waiting list per week. capacity_daily Numeric. Mean number removals waiting list per day. capacity_cov Numeric. Coefficient variation time removals waiting list. removal_count Numeric. Total number removals waiting list full time period.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_removal_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate some stats about removals — wl_removal_stats","text":"","code":"referrals <- c.Date(\"2024-01-01\", \"2024-01-04\", \"2024-01-10\", \"2024-01-16\") removals <- c.Date(\"2024-01-08\", NA, NA, NA) waiting_list <- data.frame(\"referral\" = referrals, \"removal\" = removals) removal_stats <- wl_removal_stats(waiting_list)"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_schedule.html","id":null,"dir":"Reference","previous_headings":"","what":"A simple operation scheduler — wl_schedule","title":"A simple operation scheduler — wl_schedule","text":"Takes list dates schedules waiting list, adding removal date data.frame. done referral date order, .e. earlier referrals scheduled first (FIFO).","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_schedule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A simple operation scheduler — wl_schedule","text":"","code":"wl_schedule(   waiting_list,   schedule,   referral_index = 1,   removal_index = 2,   unscheduled = FALSE )"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_schedule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A simple operation scheduler — wl_schedule","text":"waiting_list data.frame. df referral dates removals schedule Date character vector. formatted year-month-date, e.g. \"2024-04-01\".  dates schedule open referrals (.e. dates unbooked future capacity) referral_index column index waiting_list contains referral dates removal_index column index waiting_list contains removal dates unscheduled logical. TRUE, returns list scheduled unscheduled procedures FALSE, returns updated waiting list","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_schedule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A simple operation scheduler — wl_schedule","text":"updated waiting list removal dates assigned based given schedule, either single data.frame (default) part list (unscheduled = TRUE). unscheduled = TRUE, returns list two data frames: data.frame. updated waiting list scheduled removals. data.frame showing slots used, columns: schedule Date. available dates input schedule. scheduled Numeric. 1 slot used schedule patient, 0 .","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_schedule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A simple operation scheduler — wl_schedule","text":"","code":"referrals <- c.Date(\"2024-01-01\", \"2024-01-04\", \"2024-01-10\", \"2024-01-16\") removals <- c.Date(\"2024-01-08\", NA, NA, NA) waiting_list <- data.frame(\"referral\" = referrals, \"removal\" = removals) schedule <- c.Date(\"2024-01-03\", \"2024-01-05\", \"2024-01-18\") updated_waiting_list <- wl_schedule(waiting_list, schedule)"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_simulator.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple simulator to create a waiting list — wl_simulator","title":"Simple simulator to create a waiting list — wl_simulator","text":"Creates simulated waiting list comprising referral dates, removal dates","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_simulator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple simulator to create a waiting list — wl_simulator","text":"","code":"wl_simulator(   start_date = NULL,   end_date = NULL,   demand = 10,   capacity = 11,   waiting_list = NULL,   withdrawal_prob = NA_real_,   detailed_sim = FALSE )"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_simulator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple simulator to create a waiting list — wl_simulator","text":"start_date Date character (format 'YYYY-MM-DD'); start date calculate end_date Date character (format 'YYYY-MM-DD'); end date calculate demand numeric. Weekly demand (.e., typical referrals per week). capacity numeric. Weekly capacity (.e., typical removals per week). waiting_list data.frame. Waiting list row pathway/patient date columns 'Referral' 'Removal'. withdrawal_prob numeric. Probability patient withdrawing. detailed_sim logical. TRUE, simulation provides detailed output.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_simulator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple simulator to create a waiting list — wl_simulator","text":"data.frame simulating waiting list, columns: Referral Date. date patient added waiting list. Removal Date. date patient removed waiting list (may NA unscheduled).  detailed_sim = TRUE, returns detailed data.frame following additional fields: Withdrawal Date. date patient withdrew waiting list. Priority Numeric. Waiting list priority level, 1 (urgent) 4 (least urgent). Target_wait Numeric. Target number days patient wait assigned priority level (e.g., 28 days priority 2) Name Character. Patient name format \"Last, First\". Birth_date Date. Date birth. NHS_number Integer. Patient identifier, 100,000,000. Specialty_code Character. One-letter code representing specialty procedure. Specialty Character. Full name specialty associated procedure. OPCS Character. OPCS-4 code selected procedure. Procedure Character. Name selected procedure. Consultant Character. Consultant name format \"Last, First\".","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_simulator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple simulator to create a waiting list — wl_simulator","text":"","code":"over_capacity_simulation <-   wl_simulator(\"2024-01-01\", \"2024-03-31\", 100, 110) under_capacity_simulation <-   wl_simulator(\"2024-01-01\", \"2024-03-31\", 100, 90)"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate some stats about the waiting list — wl_stats","title":"Calculate some stats about the waiting list — wl_stats","text":"summary key stats associated waiting list","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate some stats about the waiting list — wl_stats","text":"","code":"wl_stats(waiting_list, target_wait = 4, start_date = NULL, end_date = NULL)"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate some stats about the waiting list — wl_stats","text":"waiting_list data.frame. df referral dates removals target_wait numeric. required waiting time start_date Date character (format 'YYYY-MM-DD'); start date calculate end_date Date character (format 'YYYY-MM-DD'); end date calculate ","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate some stats about the waiting list — wl_stats","text":"data.frame key waiting list summary statistics based queueing theory: mean_demand Numeric. Mean number additions waiting list per week. mean_capacity Numeric. Mean number removals waiting list per week. load Numeric. Ratio demand capacity. load_too_big Logical. Whether load greater equal 1, indicating whether waiting list unstable expected grow. count_demand Numeric. Total demand (.e., number referrals) full time period. queue_size Numeric. Number patients waiting list end time period. target_queue_size Numeric. recommended size waiting list achieve approximately 98.2% patients treated within target wait time. based Little’s Law, assuming system equilibrium, average waiting time set one-quarter target_wait. queue_too_big Logical. Whether queue_size twice target_queue_size. value TRUE indicates queue risk missing targets. mean_wait Numeric. Mean waiting time weeks. cv_arrival Numeric. Coefficient variation time additions waiting list. cv_removal Numeric. Coefficient variation time removals waiting list. target_capacity Numeric. weekly treatment capacity required maintain waiting list target equilibrium, assuming target queue size reached. relief_capacity Numeric. temporary weekly capacity required reduce waiting list target_queue_size within 26 weeks, assuming current demand remains steady. Calculated queue_too_big TRUE; otherwise returns NA. pressure Numeric. measure pressure system, defined 2 × mean_wait / target_wait. Values greater 1 suggest system unlikely meet waiting time targets.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/reference/wl_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate some stats about the waiting list — wl_stats","text":"","code":"referrals <- c.Date(\"2024-01-01\", \"2024-01-04\", \"2024-01-10\", \"2024-01-16\") removals <- c.Date(\"2024-01-08\", NA, NA, NA) waiting_list <- data.frame(\"referral\" = referrals, \"removal\" = removals) waiting_list_stats <- wl_stats(waiting_list)"},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/news/index.html","id":"nhsrwaitinglist-012","dir":"Changelog","previous_headings":"","what":"NHSRwaitinglist 0.1.2","title":"NHSRwaitinglist 0.1.2","text":"Bug fix release, required changes date handling R. input checks added CRAN installation instructions added.","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/news/index.html","id":"nhsrwaitinglist-011","dir":"Changelog","previous_headings":"","what":"NHSRwaitinglist 0.1.1","title":"NHSRwaitinglist 0.1.1","text":"CRAN release: 2025-04-29 Bug fixes formatting updated help files Added additional vignette using WL simulation answer questions around managing waiting lists Arguments harmonised across several functions, column specifications given details. Thanks @davidfoord1 Better column indexing wl_insert others. Thanks @davidfoord1 details added DESCRIPTION","code":""},{"path":"https://nhs-r-community.github.io/NHSRwaitinglist/news/index.html","id":"nhsrwaitinglist-01","dir":"Changelog","previous_headings":"","what":"NHSRwaitinglist 0.1","title":"NHSRwaitinglist 0.1","text":"Initial CRAN submission.","code":""}]
